<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plugin/duckchat_user_relation.proto

namespace Zaly\Proto\Plugin;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * action = duckchat.user.relation
 *
 * Generated from protobuf message <code>plugin.DuckChatUserRelationRequest</code>
 */
class DuckChatUserRelationRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     */
    private $userId = '';
    /**
     * Generated from protobuf field <code>string oppositeUserId = 2;</code>
     */
    private $oppositeUserId = '';

    public function __construct() {
        \GPBMetadata\Plugin\DuckchatUserRelation::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->userId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string oppositeUserId = 2;</code>
     * @return string
     */
    public function getOppositeUserId()
    {
        return $this->oppositeUserId;
    }

    /**
     * Generated from protobuf field <code>string oppositeUserId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setOppositeUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->oppositeUserId = $var;

        return $this;
    }

}

